<?php
/**
 * SuppressionsApiTest
 * PHP version 7.4
 *
 * @category Class
 * @package  ElasticEmail
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Elastic Email REST API
 *
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    The API has a limit of 20 concurrent connections and a hard timeout of 600 seconds per request.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://app.elasticemail.com/marketing/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given requestâ€™s description.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@elasticemail.com
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.7.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace ElasticEmail\Test\Api;

use \ElasticEmail\Configuration;
use \ElasticEmail\ApiException;
use \ElasticEmail\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * SuppressionsApiTest Class Doc Comment
 *
 * @category Class
 * @package  ElasticEmail
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class SuppressionsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for suppressionsBouncesGet
     *
     * Get Bounce List.
     *
     */
    public function testSuppressionsBouncesGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for suppressionsBouncesImportPost
     *
     * Add Bounces Async.
     *
     */
    public function testSuppressionsBouncesImportPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for suppressionsBouncesPost
     *
     * Add Bounces.
     *
     */
    public function testSuppressionsBouncesPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for suppressionsByEmailDelete
     *
     * Delete Suppression.
     *
     */
    public function testSuppressionsByEmailDelete()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for suppressionsByEmailGet
     *
     * Get Suppression.
     *
     */
    public function testSuppressionsByEmailGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for suppressionsComplaintsGet
     *
     * Get Complaints List.
     *
     */
    public function testSuppressionsComplaintsGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for suppressionsComplaintsImportPost
     *
     * Add Complaints Async.
     *
     */
    public function testSuppressionsComplaintsImportPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for suppressionsComplaintsPost
     *
     * Add Complaints.
     *
     */
    public function testSuppressionsComplaintsPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for suppressionsGet
     *
     * Get Suppressions.
     *
     */
    public function testSuppressionsGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for suppressionsUnsubscribesGet
     *
     * Get Unsubscribes List.
     *
     */
    public function testSuppressionsUnsubscribesGet()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for suppressionsUnsubscribesImportPost
     *
     * Add Unsubscribes Async.
     *
     */
    public function testSuppressionsUnsubscribesImportPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }

    /**
     * Test case for suppressionsUnsubscribesPost
     *
     * Add Unsubscribes.
     *
     */
    public function testSuppressionsUnsubscribesPost()
    {
        // TODO: implement
        self::markTestIncomplete('Not implemented');
    }
}
